service: auction-service

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-1'}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iam:
    role:
      statements:
        - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
        - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
        - ${file(iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionsTableRes: ${file(resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucketRes: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicyRes: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.Authorizer.arn}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.Authorizer.arn}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.Authorizer.arn}

  deleteAuction:
    handler: src/handlers/deleteAuction.handler
    events:
      - http:
          method: DELETE
          path: /auction/{id}
          authorizer: ${self:custom.Authorizer.arn}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.Authorizer.arn}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  AuctionsTable:
    name: !Ref AuctionsTableRes # get the name from the resource
    arn: !GetAtt AuctionsTableRes.Arn
  Authorizer:
    name: auth-service-${self:provider.stage}
    arn: arn:aws:lambda:${aws:region}:${aws:accountId}:function:auth-service-dev-auth
  MailQueue:
    name: mail-queue-${self:provider.stage}
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn} # using 'Outputs' defined in the notification cf stack
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-salouri-${self:provider.stage}
  bundle:
    linting: false
